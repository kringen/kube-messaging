namespace: kafka

zookeeper:
  name: zookeeper
  replicas: 3
  container:
    name: zookeeper
    imageRepository: k8s.gcr.io
    image: kubernetes-zookeeper
    imageVersion: 1.0-3.4.10
    command: ["sh", "-c", "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=2000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=512M \
          --max_client_cnxns=60 \
          --snap_retain_count=3 \
          --purge_interval=12 \
          --max_session_timeout=40000 \
          --min_session_timeout=4000 \
          --log_level=INFO"]
    readinessProbe:
      command: ["sh", "-c", "zookeeper-ready 2181"]
      initialDelaySeconds: 10
      timeoutSeconds: 5
    livenessProbe:
      command: ["sh", "-c", "zookeeper-ready 2181"]
      initialDelaySeconds: 10
      timeoutSeconds: 5
    env: []
    dataVolumeMountPath: /var/lib/zookeeper
    resources:
      requests:
        memory: "512Mi"
        cpu: "1"
      limits:
        memory: "1Gi"
        cpu: "3"
    ports:
    - containerPort: 2181
      name: clientport
    - containerPort: 2888
      name: serverport
    - containerPort: 3888
      name: leaderport
  service:
    ports:
    - port: 2181
      name: clientport
    - port: 2888
      name: serverport
    - port: 3888
      name: leaderport

  podAnnotations: {}

  podSecurityContext: {}

  securityContext:
    runAsUser: 1000
    fsGroup: 1000

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

kafka:
  name: kafka
  replicas: 1
  container:
    name: kafka
    imageRepository: kringen
    image: kafka
    imageVersion: 1.0.0
    env: []
    dataVolumeMountPath: /tmp/kafka-logs
    resources:
      requests:
        memory: "512Mi"
        cpu: "1"
      limits:
        memory: "3Gi"
        cpu: "3"
    ports:
    - containerPort: 9092
      name: serverport
  service:
    ports:
    - port: 9092
      name: serverport

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}
